{"ast":null,"code":"const initialData = {\n  count: 100\n};\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialData;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"ADD_COUNT\":\n      return {\n        count: ++state.count\n      };\n    case \"REDUCE_COUNT\":\n      return {\n        count: --state.count\n      };\n    case \"RESET-COUNT\":\n      return {\n        count: 100\n      };\n    default:\n      return state;\n  }\n};\nexport default counterReducer;","map":{"version":3,"names":["initialData","count","counterReducer","state","action","type"],"sources":["/home/dipti/Codes/app2/src/counterReducer.js"],"sourcesContent":["const initialData= {\n    count: 100\n}\n\nconst counterReducer = (state=initialData, action) => {\n      switch(action.type) {\n        case \"ADD_COUNT\": \n        return {count: ++state.count}\n\n        case \"REDUCE_COUNT\":\n        return {count: --state.count}\n\n        case \"RESET-COUNT\":\n        return {count: 100}\n\n        default:\n            return state\n      }\n}\n\nexport default counterReducer"],"mappings":"AAAA,MAAMA,WAAW,GAAE;EACfC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,cAAc,GAAG,YAA+B;EAAA,IAA9BC,KAAK,uEAACH,WAAW;EAAA,IAAEI,MAAM;EAC3C,QAAOA,MAAM,CAACC,IAAI;IAChB,KAAK,WAAW;MAChB,OAAO;QAACJ,KAAK,EAAE,EAAEE,KAAK,CAACF;MAAK,CAAC;IAE7B,KAAK,cAAc;MACnB,OAAO;QAACA,KAAK,EAAE,EAAEE,KAAK,CAACF;MAAK,CAAC;IAE7B,KAAK,aAAa;MAClB,OAAO;QAACA,KAAK,EAAE;MAAG,CAAC;IAEnB;MACI,OAAOE,KAAK;EAAA;AAExB,CAAC;AAED,eAAeD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}